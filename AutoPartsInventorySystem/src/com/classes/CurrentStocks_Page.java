package com.classes;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
/**
/**
 *
 * 
 */
public class CurrentStocks_Page extends javax.swing.JFrame {

    /**
     * Creates new form CurrentStocks_Page
     */
    public CurrentStocks_Page() {
        initComponents();
       
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Stock ID");
    model.addColumn("Product ID");
    model.addColumn("Product Code");
    model.addColumn("Product Name");
    model.addColumn("Quantity");
    model.addColumn("Stock Status");
    model.addColumn("Last Updated");

   
    tblCurrentStocks.setModel(model);
    
    refreshStocks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblCurrentStocks = new javax.swing.JLabel();
        lblSearchC = new javax.swing.JLabel();
        txtSearchC = new javax.swing.JTextField();
        btnGoC = new javax.swing.JButton();
        btnRefreshC = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCurrentStocks = new javax.swing.JTable();
        btnaddquan = new javax.swing.JButton();
        btnredquan = new javax.swing.JButton();
        btnCloseC = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1373, 689));

        jPanel1.setPreferredSize(new java.awt.Dimension(1370, 689));

        jPanel2.setBackground(new java.awt.Color(42, 58, 63));
        jPanel2.setPreferredSize(new java.awt.Dimension(1411, 671));

        lblCurrentStocks.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblCurrentStocks.setForeground(new java.awt.Color(255, 255, 255));
        lblCurrentStocks.setText("Current Stocks");

        lblSearchC.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSearchC.setForeground(new java.awt.Color(255, 255, 255));
        lblSearchC.setText("Search:");

        txtSearchC.setBackground(new java.awt.Color(204, 204, 204));
        txtSearchC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchCActionPerformed(evt);
            }
        });

        btnGoC.setBackground(new java.awt.Color(204, 204, 204));
        btnGoC.setText("Go");
        btnGoC.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        btnGoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoCActionPerformed(evt);
            }
        });

        btnRefreshC.setBackground(new java.awt.Color(204, 204, 204));
        btnRefreshC.setText("Refresh");
        btnRefreshC.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        btnRefreshC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshCActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        tblCurrentStocks.setBackground(new java.awt.Color(204, 204, 204));
        tblCurrentStocks.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblCurrentStocks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Stock ID", "Product ID", "Product Code", "Product Name", "Quantity", "Supplier Name", "Stock Status", "Last Updated"
            }
        ));
        tblCurrentStocks.setGridColor(new java.awt.Color(0, 0, 0));
        tblCurrentStocks.setRowHeight(25);
        tblCurrentStocks.setShowGrid(false);
        tblCurrentStocks.setShowHorizontalLines(true);
        jScrollPane2.setViewportView(tblCurrentStocks);

        btnaddquan.setBackground(new java.awt.Color(51, 51, 51));
        btnaddquan.setForeground(new java.awt.Color(255, 255, 255));
        btnaddquan.setText("Click to Add Quantity");
        btnaddquan.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        btnaddquan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddquanActionPerformed(evt);
            }
        });

        btnredquan.setBackground(new java.awt.Color(51, 51, 51));
        btnredquan.setForeground(new java.awt.Color(255, 255, 255));
        btnredquan.setText("Click to Reduce Quantity");
        btnredquan.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        btnredquan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnredquanActionPerformed(evt);
            }
        });

        btnCloseC.setBackground(new java.awt.Color(51, 51, 51));
        btnCloseC.setForeground(new java.awt.Color(255, 255, 255));
        btnCloseC.setText("Close");
        btnCloseC.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        btnCloseC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(btnaddquan)
                .addGap(18, 18, 18)
                .addComponent(btnredquan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCloseC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnaddquan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnredquan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCloseC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblCurrentStocks, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 616, Short.MAX_VALUE)
                .addComponent(lblSearchC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchC, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGoC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefreshC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearchC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGoC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRefreshC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSearchC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCurrentStocks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1364, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshCActionPerformed
        // TODO add your handling code here:
        refreshStocks();
    }//GEN-LAST:event_btnRefreshCActionPerformed

    private void btnGoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoCActionPerformed
        // TODO add your handling code here:
        String searchQuery = txtSearchC.getText();
        searchStocks(searchQuery);
    }//GEN-LAST:event_btnGoCActionPerformed

    private void txtSearchCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchCActionPerformed

    private void btnCloseCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseCActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCloseCActionPerformed

    private void btnredquanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnredquanActionPerformed
        // TODO add your handling code here:
        new Order_Page().setVisible(true);
    }//GEN-LAST:event_btnredquanActionPerformed

    private void btnaddquanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddquanActionPerformed
        // TODO add your handling code here:
        new Delivery_Page().setVisible(true);
    }//GEN-LAST:event_btnaddquanActionPerformed
 
    private void refreshStocks() {
        populateCurrentStocks();
        DefaultTableModel model = (DefaultTableModel) tblCurrentStocks.getModel();
        model.setRowCount(0); // Clears the existing table data

    // Updated query to join current_stocks and products tables
    String query = "SELECT cs.stockid, cs.product_id, p.product_code, p.product_name, " +
                   "cs.quantity, " +
                   "CASE " +
                   "    WHEN cs.quantity = 0 THEN 'Out of Stock' " +
                   "    WHEN cs.quantity <= 20 THEN 'Low Stock' " +
                   "    ELSE 'In Stock' " +
                   "END AS stock_status, " +
                   "cs.last_updated " +
                   "FROM current_stocks cs " +
                   "JOIN products p ON cs.product_id = p.product_id"; // Join on product_id between current_stocks and products

    try (Connection conn = DBConnector.getConnection();
         PreparedStatement pst = conn.prepareStatement(query);
         ResultSet rs = pst.executeQuery()) {

        while (rs.next()) {
            Object[] row = new Object[7];  
            row[0] = rs.getInt("stockid");
            row[1] = rs.getInt("product_id");
            row[2] = rs.getString("product_code");
            row[3] = rs.getString("product_name");
            row[4] = rs.getInt("quantity");
            row[5] = rs.getString("stock_status"); 
            row[6] = rs.getTimestamp("last_updated");  

            model.addRow(row);  // Adds row to the table model
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading current stocks: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}
  
   private void searchStocks(String searchQuery) {
    DefaultTableModel model = (DefaultTableModel) tblCurrentStocks.getModel();
    model.setRowCount(0); // Clear table before adding search results
 
    String searchSQL = "SELECT p.product_id, p.product_code, p.product_name, p.quantity, " +
                       "s.suppliername " +
                       "FROM products p " +
                       "JOIN suppliers s ON p.supplier_id = s.supplier_id " +
                       "WHERE LOWER(p.product_id) LIKE ? OR LOWER(p.product_code) LIKE ? " +
                       "OR LOWER(p.product_name) LIKE ? OR LOWER(p.quantity) LIKE ? " +
                       "OR LOWER(s.suppliername) LIKE ?";

    try (Connection conn = DBConnector.getConnection();
         PreparedStatement pst = conn.prepareStatement(searchSQL)) {
        
        String searchPattern = "%" + searchQuery.toLowerCase() + "%";  // Case insensitive search
        pst.setString(1, searchPattern);  // For product_id
        pst.setString(2, searchPattern);  // For product_code
        pst.setString(3, searchPattern);  // For product_name
        pst.setString(4, searchPattern);  // For quantity
        pst.setString(5, searchPattern);  // For suppliername

        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            Object[] row = new Object[6];
            row[0] = rs.getInt("product_id");
            row[1] = rs.getString("product_code");
            row[2] = rs.getString("product_name");
            row[3] = rs.getInt("quantity");

            // Manually calculate stock status based on quantity
            int quantity = rs.getInt("quantity");
            String stockStatus = (quantity > 0) ? "In Stock" : "Out of Stock";
            row[4] = stockStatus;  // Set calculated stock status

            row[5] = rs.getString("suppliername");

            model.addRow(row);  
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error while searching stocks: " + ex.getMessage());
    }
}
   
 private void populateCurrentStocks() {
    String queryInsertProduct = "INSERT INTO current_stocks (product_id, quantity, stockstatus, last_updated) " +
                                "VALUES (?, ?, ?, NOW())";
    String queryUpdateProduct = "UPDATE current_stocks SET quantity = ?, stockstatus = ?, last_updated = NOW() WHERE product_id = ?";
    String queryProducts = "SELECT product_id, quantity FROM products";

    try (Connection conn = DBConnector.getConnection();
         PreparedStatement pstInsert = conn.prepareStatement(queryInsertProduct);
         PreparedStatement pstUpdate = conn.prepareStatement(queryUpdateProduct);
         PreparedStatement pstProducts = conn.prepareStatement(queryProducts);
         ResultSet rsProducts = pstProducts.executeQuery()) {

        while (rsProducts.next()) {
            int productId = rsProducts.getInt("product_id");
            int quantity = rsProducts.getInt("quantity");

            // Determine stock status
            String stockStatus = (quantity == 0) ? "Out of Stock" :
                                 (quantity <= 20) ? "Low Stock" : "In Stock";

            // Check if product exists in current_stocks
            String queryCheckExistence = "SELECT quantity FROM current_stocks WHERE product_id = ?";
            try (PreparedStatement pstCheck = conn.prepareStatement(queryCheckExistence)) {
                pstCheck.setInt(1, productId);
                try (ResultSet rsCheck = pstCheck.executeQuery()) {
                    if (rsCheck.next()) {  // Product exists, check if quantity has changed
                        int currentQuantity = rsCheck.getInt("quantity");
                        if (currentQuantity != quantity) {  // Only update if quantity has changed
                            pstUpdate.setInt(1, quantity);
                            pstUpdate.setString(2, stockStatus);
                            pstUpdate.setInt(3, productId);
                            pstUpdate.executeUpdate();
                        }
                    } else {  // Product doesn't exist in current_stocks, insert it
                        pstInsert.setInt(1, productId);
                        pstInsert.setInt(2, quantity);
                        pstInsert.setString(3, stockStatus);
                        pstInsert.executeUpdate();
                    }
                }
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error populating current stocks: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrentStocks_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrentStocks_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrentStocks_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrentStocks_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrentStocks_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseC;
    private javax.swing.JButton btnGoC;
    private javax.swing.JButton btnRefreshC;
    private javax.swing.JButton btnaddquan;
    private javax.swing.JButton btnredquan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCurrentStocks;
    private javax.swing.JLabel lblSearchC;
    private javax.swing.JTable tblCurrentStocks;
    private javax.swing.JTextField txtSearchC;
    // End of variables declaration//GEN-END:variables
}
